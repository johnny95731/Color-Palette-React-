@import "../commons.scss";

.cardContainer {
  position: relative;
  flex: 1 1 auto;
  display: flex;

  &:hover .toolContainer :global(.icon) {
    visibility: visible;
  }
  &:hover .sideCard :global(.icon) {
    display: block;
  }

  @media only screen and (max-width: 900px) {
    align-items: center;
    flex-wrap: nowrap;
    flex-direction: column;
  }
}

.toolContainer {
  @extend %horizontalCenter;
  bottom: 37%;
  
  :global(.icon) {
    display: block;
    visibility: hidden;
    margin: 27px auto;
    height: 27px;
  }

  @media only screen and (max-width: 900px) {
    position: static;
    display: inline;
    width: max-content;
    :global(.icon) {
      visibility: visible;
      display: inline;
      height: 20px;
      margin: auto 10px;
    }
  }

  @media only screen and (min-width: 1024px) and (max-width: 1440px) {
    :global(.icon) {
      margin: 25px auto;
      height: 23px;
    }
  }

  @media screen and(min-width: 2559px) {
    bottom: 38%;
    :global(.icon) {
      margin: 48px auto;
      height: 40px;
    }
  }
}

.textRegion {
  @extend %horizontalCenter;
  top: 63%;
  width: 50%;
  text-align: center;
  >div {
    cursor: pointer;
    :global(.icon) {
      opacity: 0;
    }
    &:hover :global(.icon) {
      opacity: 1;
    }
  }

  @media only screen and (max-width: 900px) {
    display: inline;
    position: static;
    width: 200px;
  }
}

$hexSize: 26px;
$hexSize1024: 20px;
$hexSize2560: 39px;
@mixin textDisplay($iconHeight, $iconMargin, $fontSize: 16px) {
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  width: min-content;
  font-size: $fontSize;
  :global(.icon) {
    position: absolute;
    height: $iconHeight;
    top: 50%;
    transform: translateX(calc(-100% - #{$iconMargin})) translateY(-50%);
  }
}

.hexText {
  @include textDisplay(18px, 3px, $hexSize);
}
.rgbText {
  margin-top: 4px;
  @include textDisplay(10px, 2px, 15px);
}

@media only screen and (max-width: 900px) {
  .hexText {
    font-size: 24px;
  }
  .rgbText {
    font-size: 14px;
  }
}

@media only screen and (min-width: 1024px) and (max-width: 1440px) {
  .hexText {
    @include textDisplay(16px, 4px, $hexSize1024);
  }
  .rgbText {
    margin-top: 3px;
    @include textDisplay(9px, 3px, 11px);
  }
}

@media only screen and (min-width: 2559px) {
  .hexText {
    @include textDisplay(25px, 6px, $hexSize2560);
  }
  .rgbText {
    @include textDisplay(13px, 4px, 19px);
  }
}

.hexInput {
  display: block;
  font-size: $hexSize;
  width: 100%;
  border-radius: 5px;
  border-width: 0;
  padding: 2px 10px;
  margin: 0 auto 10px;
  box-sizing: border-box;
  cursor: text;
  user-select: text;

  @media only screen and (min-width: 1023px) and (max-width: 1440px) {
    font-size: $hexSize * 0.8;
  }
  @media only screen and (min-width: 2559px) {
    font-size: $hexSize * 1.4;
  }
}

.sliders {
  >input {
    width: 100%;
  }

  @media only screen and (min-width: 1023px) and (max-width: 1440px) {
    font-size: 11px;
  }
  @media only screen and (min-width: 2559px) {
    font-size: 25px;
  }
}
